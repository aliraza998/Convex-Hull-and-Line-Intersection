/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication2;

import java.awt.Graphics;
import javax.swing.JOptionPane;

/**
 *
 * @author Saadu
 */
public class LineIntersect extends javax.swing.JFrame {

    private ChoicePage choicepage;
    private boolean areLinesIntersectingCCW = false;
    private boolean areLinesIntersectingCrossProduct = false;
    private boolean areLinesIntersectingSlope = false;
//    double x1, x2, x3, x4, y1, y2, y3, y4;
    private CustomDrawingPanel customDrawingPanel;
    Database database;
    private int linesPanelClickNumber = 0;
    /**
     * Creates new form LineIntersect
     * @param choice
     */
    public LineIntersect(ChoicePage choice) {
        database = new Database();
        choicepage = choice;
        initComponents();
    }

    public static boolean areLinesIntersectingCrossProduct(double x1, double y1, double x2, double y2,
            double x3, double y3, double x4, double y4) {
        System.out.println("Method: Slope Test ");
        // Calculate vectors
        double dx1 = x2 - x1;
        double dy1 = y2 - y1;
        double dx2 = x4 - x3;
        double dy2 = y4 - y3;
        double delta = dx2 * dy1 - dy2 * dx1;

        // Lines are parallel if delta is 0 (or very close to it)
        if (Math.abs(delta) < 1e-9) {
            return false;
        }

        double s = (dx1 * (y3 - y1) + dy1 * (x1 - x3)) / delta;
        double t = (dx2 * (y1 - y3) + dy2 * (x3 - x1)) / -delta;

        // Return true if s and t are between 0 and 1
        return (s >= 0) && (s <= 1) && (t >= 0) && (t <= 1);
    }

    public static boolean areLinesIntersecting(double x1, double y1, double x2, double y2,
            double x3, double y3, double x4, double y4) {
        double slope1 = (y2 - y1) / (x2 - x1);
        double slope2 = (y4 - y3) / (x4 - x3);

        // Check if slopes are equal (lines are parallel)
        if (slope1 == slope2) {
            return false; // Lines are either parallel or coincident
        } else {
            // Calculate intersection point
            double x = ((slope1 * x1 - slope2 * x3) + y3 - y1) / (slope1 - slope2);
            double y = slope1 * (x - x1) + y1;
            System.out.println("Intersection point is: " + x + "," + y);
            // Check if the intersection point is within the line segments
            if (isPointOnLine(x, y, x1, y1, x2, y2) && isPointOnLine(x, y, x3, y3, x4, y4)) {
                return true; // Lines intersect at (x, y)
            }
        }

        return false; // Lines do not intersect
    }
     private static boolean isPointOnLine(double x, double y, double x1, double y1, double x2, double y2) {
        // Check if (x, y) is within the bounding box of the line segment
        return x >= Math.min(x1, x2) && x <= Math.max(x1, x2) &&
               y >= Math.min(y1, y2) && y <= Math.max(y1, y2);
    }
//    public void setIntersectionParameters(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4) {
//        if (linesPanel instanceof CustomDrawingPanel) {
//        CustomDrawingPanel customPanel = (CustomDrawingPanel) linesPanel;
//        customPanel.setIntersectionParameters(x1, y1, x2, y2, x3, y3, x4, y4);
//        linesPanel.repaint();
//    } 
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        y2Field = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        y1Field = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        y3Field = new javax.swing.JTextField();
        y4Field = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        resultLabel = new javax.swing.JLabel();
        x1Field = new javax.swing.JTextField();
        x2Field = new javax.swing.JTextField();
        x3Field = new javax.swing.JTextField();
        x4Field = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        linesPanel = new CustomDrawingPanel(database);
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(854, 480));
        setMinimumSize(new java.awt.Dimension(854, 480));
        setUndecorated(true);
        setSize(new java.awt.Dimension(854, 480));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Point 2:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Input Line 2:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        y2Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y2FieldActionPerformed(evt);
            }
        });
        getContentPane().add(y2Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 40, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Input Line 1:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Point 1:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        y1Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y1FieldActionPerformed(evt);
            }
        });
        getContentPane().add(y1Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 40, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Point 1:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Point 2:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        y3Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y3FieldActionPerformed(evt);
            }
        });
        getContentPane().add(y3Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 40, -1));

        y4Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y4FieldActionPerformed(evt);
            }
        });
        getContentPane().add(y4Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 40, -1));

        jButton1.setText("Cross Product Test");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 4));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 370, 240, -1));

        jButton2.setText("Counter-Clockwise (CCW) Test");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 230, -1));

        resultLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        resultLabel.setForeground(new java.awt.Color(255, 255, 255));
        resultLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        resultLabel.setText("Result Not Finalized");
        resultLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        resultLabel.setAutoscrolls(true);
        getContentPane().add(resultLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 160, 30));

        x1Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x1FieldActionPerformed(evt);
            }
        });
        getContentPane().add(x1Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 40, -1));

        x2Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x2FieldActionPerformed(evt);
            }
        });
        getContentPane().add(x2Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 40, -1));

        x3Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x3FieldActionPerformed(evt);
            }
        });
        getContentPane().add(x3Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 40, -1));

        x4Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x4FieldActionPerformed(evt);
            }
        });
        getContentPane().add(x4Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, 40, -1));

        jButton3.setText("Slope comparision");
        jButton3.setMaximumSize(new java.awt.Dimension(151, 24));
        jButton3.setMinimumSize(new java.awt.Dimension(151, 24));
        jButton3.setPreferredSize(new java.awt.Dimension(151, 24));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 370, 240, -1));

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 100, -1));

        linesPanel.setBackground(new java.awt.Color(204, 204, 204));
        linesPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        linesPanel.setForeground(new java.awt.Color(204, 204, 204));
        linesPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                linesPanelMouseClicked(evt);
            }
        });
        getContentPane().add(linesPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 640, 320));

        jButton5.setText("Clear All");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 410, 110, -1));

        jButton6.setText("Input Lines");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 130, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("X");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 0, 20, 20));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("(With Reference to Research Paper)");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 410, 230, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication2/DAA(1100_480)-transformed.jpeg"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 480));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void y2FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y2FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y2FieldActionPerformed

    private void y1FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y1FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y1FieldActionPerformed

    private void y3FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y3FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y3FieldActionPerformed

    private void y4FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y4FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y4FieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    int x1 = 0, y1 = 0, x2 = 0, y2 = 0, x3 = 0, y3 = 0, x4 = 0, y4 = 0;
    try {
        x1 = database.x1;
        x2 = database.x2;
        x3 = database.x3;
        x4 = database.x4;
        y1 = database.y1;
        y2 = database.y2;
        y3 = database.y3;
        y4 = database.y4;
    } catch (NullPointerException e) {
        JOptionPane.showMessageDialog(rootPane, "Please Enter all points.");
    }

    // Print input points
    System.out.println("Solving by CCW Test: ");
    System.out.println("Input Points: (" + x1 + ", " + y1 + "), (" + x2 + ", " + y2 + "), (" + x3 + ", " + y3 + "), (" + x4 + ", " + y4 + ")");

    // Calculate CCW results
    Integer test1 = Coordinates.ccw(x1, y1, x2, y2, x3, y3) * Coordinates.ccw(x1, y1, x2, y2, x4, y4);
    Integer test2 = Coordinates.ccw(x3, y3, x4, y4, x1, y1) * Coordinates.ccw(x3, y3, x4, y4, x2, y2);

    // Print CCW results
    System.out.println("CCW Test Result 1: " + test1);
    System.out.println("CCW Test Result 2: " + test2);

    if ((test1 <= 0) && test2 <= 0) {
        System.out.println("The lines intersect.");
        resultLabel.setText("The lines Intersect.");
    } else {
        System.out.println("The lines do not intersect.");
        resultLabel.setText("The lines do not Intersect.");
    }
    linesPanel.repaint();
    System.out.println();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void x1FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x1FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x1FieldActionPerformed

    private void x2FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x2FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x2FieldActionPerformed

    private void x3FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x3FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x3FieldActionPerformed

    private void x4FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x4FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x4FieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    int x1 = 0, y1 = 0, x2 = 0, y2 = 0, x3 = 0, y3 = 0, x4 = 0, y4 = 0;
    try {
        x1 = database.x1;
        x2 = database.x2;
        x3 = database.x3;
        x4 = database.x4;
        y1 = database.y1;
        y2 = database.y2;
        y3 = database.y3;
        y4 = database.y4;
        
    } catch (NullPointerException e) {
        JOptionPane.showMessageDialog(rootPane, "Please Enter all points.");
    }
    System.out.println("Testing by Cross Product Method:");
    System.out.println("Input Points: (" + x1 + ", " + y1 + "), (" + x2 + ", " + y2 + "), (" + x3 + ", " + y3 + "), (" + x4 + ", " + y4 + ")");
    double dx1 = x2 - x1;
    double dy1 = y2 - y1;
    double dx2 = x4 - x3;
    double dy2 = y4 - y3;

    System.out.println("Vector 1: (" + dx1 + ", " + dy1 + ")");
    System.out.println("Vector 2: (" + dx2 + ", " + dy2 + ")");

    double delta = dx2 * dy1 - dy2 * dx1;
    System.out.println("Cross Product (delta): " + delta);
    if (Math.abs(delta) < 1e-9) {
        System.out.println("Lines are parallel.");
        resultLabel.setText("The lines are parallel.");
        return;
    }

    double s = (dx1 * (y3 - y1) + dy1 * (x1 - x3)) / delta;
    double t = (dx2 * (y1 - y3) + dy2 * (x3 - x1)) / -delta;
//    System.out.println("Parameter s: " + s);
//buh    System.out.println("Parameter t: " + t);
    if ((s >= 0) && (s <= 1) && (t >= 0) && (t <= 1)) {
        System.out.println("The lines intersect.");
        resultLabel.setText("The lines Intersect.");
    } else {
        System.out.println("The lines do not intersect.");
        resultLabel.setText("The lines do not Intersect.");
    }
    System.out.println();
    linesPanel.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

    int x1 = 0, y1 = 0, x2 = 0, y2 = 0, x3 = 0, y3 = 0, x4 = 0, y4 = 0;
    try {
        x1 = database.x1;
        x2 = database.x2;
        x3 = database.x3;
        x4 = database.x4;
        y1 = database.y1;
        y2 = database.y2;
        y3 = database.y3;
        y4 = database.y4;
    } catch (NullPointerException e) {
        JOptionPane.showMessageDialog(rootPane, "Please Enter all points.");
    }

    // Print input points
    System.out.println("Testing by Slope Comparison Method");
    System.out.println("Input Points: (" + x1 + ", " + y1 + "), (" + x2 + ", " + y2 + "), (" + x3 + ", " + y3 + "), (" + x4 + ", " + y4 + ")");

    // Calculate slope results
    boolean result = areLinesIntersecting(x1, y1, x2, y2, x3, y3, x4, y4);

    // Print slope results
    if (result) {
        System.out.println("The lines intersect.");
        resultLabel.setText("The lines Intersect.");
    } else {
        System.out.println("The lines do not intersect.");
        resultLabel.setText("The lines do not Intersect.");
    }
    System.out.println();
    linesPanel.repaint();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void linesPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linesPanelMouseClicked
        // TODO add your handling code here:
        linesPanelClickNumber += 1;
        if (linesPanelClickNumber <= 4)
        {
//            database.add(evt.getX(), evt.getY());
            database.add(evt.getX(), linesPanel.getHeight() - evt.getY());
            if (linesPanelClickNumber == 1) {
            database.x1 = evt.getX(); database.y1 = evt.getY();
            System.out.println("Integer added: " + evt.getX() + ", " + evt.getY());
            }
            else if (linesPanelClickNumber == 2)
            {
            database.x2 = evt.getX(); database.y2 = evt.getY();
            
//            linesPanel.repaint();
            System.out.println("Integer added: " + evt.getX() + ", " + evt.getY());
            }
            else if (linesPanelClickNumber == 3)
            {
            database.x3 = evt.getX(); database.y3 = evt.getY();
            System.out.println("Integer added: " + evt.getX() + ", " + evt.getY());
            }
            else if (linesPanelClickNumber == 4)
            {
            database.x4 = evt.getX(); database.y4 = evt.getY();
//            linesPanel.repaint();
            System.out.println("Integer added: " + evt.getX() + ", " + evt.getY());
            }
            linesPanel.repaint();
        }
    }//GEN-LAST:event_linesPanelMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
       this.setVisible(false);
       choicepage.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        x1Field.setText("");
        y1Field.setText("");
        x2Field.setText("");
        y2Field.setText("");
        x3Field.setText("");
        y3Field.setText("");
        x4Field.setText("");
        y4Field.setText("");
        database.x1 = null; database.x2 = null; database.x3 = null; database.x4 = null; database.y1 = null; database.y2 = null; database.y3 = null; database.y4 = null;
//        setIntersectionParameters(database.x1, database.y1, database.x2, database.y2, database.x3, database.y3, database.x4, database.y4);
        database.allpoints.clear();
        linesPanel.repaint();
        linesPanelClickNumber = 0;
        resultLabel.setText("Result Not Finalized.");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
            database.y1 = Integer.parseInt(y1Field.getText().trim());
            database.x1 = Integer.parseInt(x1Field.getText().trim());
            database.x2 = Integer.parseInt(x2Field.getText().trim());
            database.y2 = Integer.parseInt(y2Field.getText().trim());
            database.x3 = Integer.parseInt(x3Field.getText().trim());
            database.y3 = Integer.parseInt(y3Field.getText().trim());
            database.x4 = Integer.parseInt(x4Field.getText().trim());
            database.y4 = Integer.parseInt(y4Field.getText().trim());
            
        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Invalid input. Please enter coordinates properly in the boxes.");
        }
        linesPanelClickNumber = 0;
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel7MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (Integerroduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LineIntersect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LineIntersect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LineIntersect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LineIntersect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new LineIntersect(choicepage).setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel linesPanel;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JTextField x1Field;
    private javax.swing.JTextField x2Field;
    private javax.swing.JTextField x3Field;
    private javax.swing.JTextField x4Field;
    private javax.swing.JTextField y1Field;
    private javax.swing.JTextField y2Field;
    private javax.swing.JTextField y3Field;
    private javax.swing.JTextField y4Field;
    // End of variables declaration//GEN-END:variables
}
